.container {
    // Si es menor a 120rem, ocupará el 100% del width.
    max-width: 120rem;
    margin: 8rem auto;
    background-color: var(--color-grey-light-1);
    box-shadow: var(--shadow-dark);

    // Para mantener el proyecto más simple, no se va a escribir el media-query manager acá.
    // max-width: desktop-first approach.
    @media only screen and (max-width: $bp-largest) {
        margin: 0;
        // Como se reduce el tamaño del font-size por defecto, las medida definida arriba (120rem)
        // fallará, ya que ahora no será 120*10 = 1200px, si no más bien 120*8 = 960px.
        max-width: 100%;
        width: 100%; // solo para estar 100% seguros
    }
}

.header {
    font-size: 1.4rem; // para que se herede en todo el componente
    height: 7rem;
    background-color: var(--color-white);
    border-bottom: var(--line);

    display: flex;
    // space between divide el contenido disponible entre los elementos
    justify-content: space-between;
    // alinea los items en el cross axis
    align-items: center;

    @media only screen and (max-width: $bp-smallest) {
        // para enviar el search bar a un row aparte (recordar que también se cambió el order del searchbar)
        flex-wrap: wrap;
        align-content: space-around; // para controlar el espacio entre los rows del flex-wrap
        // para que quepa todo el contenido se incrementa el height un poco
        height: 11rem;
    }
}

.content {
    display: flex;

    @media only screen and (max-width: $bp-medium) {
        flex-direction: column;
    }
}

.sidebar {
    background-color: var(--color-grey-dark-1);
    // valores: flex-growth, flex-shrink, flex-basis
    // flex basis como es un porcentaje, se ajustará al width y no es un valor fijo
    flex: 0 0 18%;

    // column para poder usar justify content verticalmente
    display: flex;
    flex-direction: column;
    justify-content: space-between;

}

.hotel-view {
    background-color: var(--color-white);

    // flex 1 para que ocupe el resto del espacio disponible (82%).
    flex: 1;

    // Para testing mientras se programa el sidebar, quitar después
    // background-color: orange;
    // height: 80rem;
}

.detail {
    // para que se herede tanto en description como en user-reviews
    font-size: 1.4rem;
    display: flex;
    // para que la distancia del padding y el margin-right entre columnas sea la misma
    padding: 4.5rem;
    background-color: var(--color-grey-light-1);
    border-bottom: var(--line);

    @media only screen and (max-width: $bp-medium) {
        padding: 3rem;
    }

    // Cuidado con el orden! Siempre dejar el mas pequeño de ultimo para que sea el que se aplique
    // (recordar especificidad, el ultimo gana, en caso de que haya conflictos entre propiedades)
    @media only screen and (max-width: $bp-small) {
        flex-direction: column;
    }
}

.description {

    background-color: var(--color-white);
    box-shadow: var(--shadow-light);
    padding: 3rem;

    // recordar usar porcentaje, nunca un valor fijo, para hacerlo más responsive.
    flex: 0 0 60%;
    // espacio entre las columnas
    margin-right: 4.5rem;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-right: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        margin-right: 0;
        margin-bottom: 3rem;
    }
}

.user-reviews {
    // para que ocupe el espacio restante
    flex: 1;

    // No es buena idea usar text-align center acá, porque también alinea el texto de las reviews.
    // text-align: center;

    // Para que todos los elementos estén en el centro (pero el objetivo principal es centrar el link de "Show all"
    display: flex;
    flex-direction: column;

    // para hacer override del stretch, que hace que el link de "show all" ocupara todo el espacio disponible,
    // haciendo que se viera un border-bottom enorme que cubria todo el width.
    align-items: center;

}
