.popup {
    height: 100vh;
    width: 100%; // css redundante pero no es un problema acá (block agarra el 100% del width por defecto)
    position: fixed; // deberia ser fixed en vez de absolute para que no se pueda hacer scroll!!
    top: 0;
    left: 0;
    background-color: rgba($color-black, .8);
    z-index: 3000; // El popup tiene relevancia sobre todo el resto de elementos, incluso el menu flotante
    // display: none; // no usar display none acá porque NO se puede animar
    opacity: 0; // recordar que tiene que ir acompañado de visibility: hidden para que no sea seleccionable ni interactivo.
    visibility: hidden; // para que sea transparente y no se pueda seleccionar/interactuar con el elemento.
    transition: all .3s;


       
    &__content {
        @include centerHorizontalVertical;
        background-color: $color-white;
        width: 75%;
        // height: 50rem; // solo era para probar mientras se agregaba el resto del contenido
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
        display: table; // simula que es una tabla
        overflow: hidden; // para que la imagen no corte el border-radius;

        // para que se anime cuando se abre
        opacity: 0;
        // no se puede poner solo el scale porque solo puede haber un transform al mismo tiempo,
        // por lo que si no se pone, estaria haciendole override al transform del mixin y el elemento
        // no estaría centrado
        transform: translate(-50%, -50%) scale(.75);
        // tiene un animation delay de .2s
        transition: all .4s .2s;
    }

    &__left {
        width: (1 / 3) * 100%;
        // table-cell es mejor que usar floats para poner centrar las columnas de una forma mas facil
        // hace que ambas tengan la misma altura, incluso si el contenido no cubre todo, como es el caso de la
        // columna derecha, es solo un texto con un botones pero el vertical-align se asegura que siempre esté
        // centrado, y con la misma altura que las imagenes
        display: table-cell; // simula que son cells de una columna y permite usar el vertical-align
    }
    
    &__right {
        width: (2 / 3) * 100%;
        display: table-cell;
        vertical-align: middle;
        padding: 3rem 5rem;
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        column-count: 2; // cantidad de columnas de texto que se crearán
        // recordar que em es relativo al tamaño de fuente del elemento actual (en este caso 1.4rem)
        column-gap: 4rem; //1em = 14px // gutter entre ambas columnas de texto
        column-rule: 1px solid $color-grey-light-2; // agregar un break line vertical entre cada columna/parrafo

        // También existe el manual y se define en donde se romperia dentro del HTML, pero es mejor dejarle ese trabajo al browser
        // aunque se tiene que definir el lenguaje del elemento root <HTML /> usando el atributo "lang" para que funcione correctamente.
        hyphens: auto;
    }

    // OPEN STATES
    // Pseudoclase que se activa cuando el target del anchor es el elemento, se puede quitar simplemente cambiando el target del anchor.
    &:target {
        opacity: 1;
        visibility: visible;
    }

    // para crear una animacion cuando el elemento se abra
    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    // boton para cerrar (anchor)
    &__close {
        &:Link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            // como la X del icono es texto, el line-height estaba ocupando mas espacio de lo que deberia, por lo que se reduce a uno
            // para que el boton se alinea correctamente
            line-height: 1;
        }

        &:hover {
            color: $color-primary;
        }
    }
    
 
}